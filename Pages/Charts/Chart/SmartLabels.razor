@page "/chart/smart-labels"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
   <p>This sample illustrates the Rio Olympic’s gold medal count by using smart labels in the chart. The smart label placement for a series can be shown, when it contains more of points.</p> 
</SampleDescription>
<ActionDescription>
   <p> In this example, you can see how to arrange the labels smartly without overlapping with each other. You can use <code>EnableSmartLabels</code> property to enable or disable the action. Legend with paging is enabled in this sample.</p>
   <p> <code>Tooltip</code> is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <SfAccumulationChart EnableBorderOnMouseMove="false" Title="Rio Olympics Gold" EnableSmartLabels="true" Theme="@Theme">
        <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
        <AccumulationChartTooltipSettings Enable="true" Format="${point.x} : <b>${point.y}%</b>"></AccumulationChartTooltipSettings>

        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@StatisticsDetails" Name="RIO" XName="Country" YName="Users" StartAngle="60" InnerRadius="0%">
                <AccumulationDataLabelSettings Name="Text" Visible="true" Position="AccumulationLabelPosition.Outside">
                    <AccumulationChartConnector Length="20px" Type="ConnectorType.Curve"></AccumulationChartConnector>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </SfAccumulationChart>
</div>

@code{
    public class Statistics
    {
        public string Country { get; set; }
        public double Users { get; set; }
        public string Text { get; set; }
    }
    public List<Statistics> StatisticsDetails = new List<Statistics>
{
        new Statistics { Country = "USA", Users = 46, Text = "United States of America: 46" },
        new Statistics { Country = "China", Users = 26, Text = "China: 26" },
        new Statistics { Country = "Russia", Users = 19, Text = "Russia: 19" },
        new Statistics { Country = "Germany", Users = 17, Text = "Germany: 17" },
        new Statistics { Country = "Japan", Users = 12, Text = "Japan: 12"  },
        new Statistics { Country = "France", Users = 10, Text = "France: 10" },
        new Statistics { Country = "South Korea", Users = 9, Text = "South Korea: 9" },
        new Statistics { Country = "Great Britain", Users = 27, Text = "Great Britain: 27" },
        new Statistics { Country = "Italy", Users = 8, Text = "Italy: 8" },
        new Statistics { Country = "Australia", Users = 8, Text = "Australia: 8" },
        new Statistics { Country = "Netherlands", Users = 8, Text = "Netherlands: 8" },
        new Statistics { Country = "NewZealand", Users = 4, Text = "New Zealand: 4" },
        new Statistics { Country = "Uzbekistan", Users = 4, Text = "Uzbekistan: 4" },
        new Statistics { Country = "Kazakhstan", Users = 3, Text = "Kazakhstan: 3" },
        new Statistics { Country = "Colombia", Users = 3, Text = "Colombia: 3" },
        new Statistics { Country = "Switzerland", Users = 3, Text = "Switzerland: 3" },
        new Statistics { Country = "Argentina", Users = 3, Text = "Argentina: 3" },
        new Statistics { Country = "South Africa", Users = 2, Text = "South Africa: 2" },
        new Statistics { Country = "North Korea", Users = 2, Text = "North Korea: 2" },
    };
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

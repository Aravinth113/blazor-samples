@page "/chart/bollinger"
@using Newtonsoft.Json
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
 <p>This sample illustrates a stock chart with candle series and a Bollinger band indicator.Trackball shows the information about the stock, signalline, upperline, and lowerline value of a day.</p>   
</SampleDescription>
<ActionDescription>
<p>In this example, you can see how to render and configure the BollingerBands type Indicator. You can use <code>Border</code>,<code>Fill</code> properties to customize the area. </p>
<p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
<p>More information on the BollingerIndicator can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>  
</ActionDescription>

@if (IndicatorData == null)
{
    <div class="stockchartloader"></div>
}
else
{
    <div class="control-section">
        <SfChart Title="AAPL - 2012-2017" Theme="@Theme">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" IntervalType="IntervalType.Months" ZoomFactor="0.2" ZoomPosition="0.6">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisCrosshairTooltip Enable="true"></ChartAxisCrosshairTooltip>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Title="Price" LabelFormat="${value}M" Minimum="50" Maximum="170" Interval="30">
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            </ChartPrimaryYAxis>
            <ChartTooltipSettings Enable="true" Shared="true"></ChartTooltipSettings>
            <ChartLegendSettings Visible="false"></ChartLegendSettings>
            <ChartArea>
                <ChartAreaBorder Width="0"></ChartAreaBorder>
            </ChartArea>
            <ChartZoomSettings EnableDeferredZooming="true" EnablePinchZooming="true" EnableSelectionZooming="true" Mode="ZoomMode.X"></ChartZoomSettings>
            <ChartCrosshairSettings Enable="true" LineType="LineType.Vertical"></ChartCrosshairSettings>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@IndicatorData" XName="x" YName="y" Low="low" High="high" Close="close" Volume="volume" Open="open"
                             Width="2" Name="Apple Inc" Type="ChartSeriesType.Candle" BearFillColor="#2ecd71" BullFillColor="#e74c3d">
                    <ChartSeriesAnimation Enable="false"></ChartSeriesAnimation>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartIndicators>
                <ChartIndicator Type="TechnicalIndicators.BollingerBands" Field="FinancialDataFields.Close" SeriesName="Apple Inc" Fill="#606eff" Period="14">
                    <ChartIndicatorLowerLine Color="#f2ec2f" Width="1"></ChartIndicatorLowerLine>
                    <ChartIndicatorUpperLine Color="#ffb735" Width="1"></ChartIndicatorUpperLine>
                    <ChartIndicatorAnimation Enable="true"></ChartIndicatorAnimation>
                </ChartIndicator>
            </ChartIndicators>
        </SfChart>
    </div>
}
@code{
    private ChartData[] IndicatorData;
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override async Task OnInitializedAsync()
    {
        //indicatorData = await Http.GetJsonAsync<ChartData[]>("scripts/chart/financial-data.json");
        await Task.Run(() =>
        {
            IndicatorData = JsonConvert.DeserializeObject<ChartData[]>(System.IO.File.ReadAllText("./wwwroot/data/chart/financial-data.json"));
        });
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
    public class ChartData
    {
        public DateTime x { get; set; }
        public double high { get; set; }
        public double low { get; set; }
        public double open { get; set; }
        public double close { get; set; }
        public double volume { get; set; }
    }
}

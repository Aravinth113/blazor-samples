@page "/chart/logarithmic-scale"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p> This sample demonstrates the rendering of logarithmic axis in the chart.</p>
</SampleDescription>
<ActionDescription>
 <p> Logarithmic axis uses logarithmic scale and it is very useful in visualizing when the data has values with both lower order of magnitude (eg: 10^-6) and higher order of magnitude (eg: 10^6). To render Logarithmic axis, set <code>ValueType</code> in axis to <b>Logarithmic</b>.</p>
 <p> Hover the chart area to view trackball and its tooltip. Touch and hold to enable trackball in touch enabled devices.</p>
<p>More information on the Logarithmic Axis can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>  
</ActionDescription>

<div class="control-section">
        <SfChart Title="Product X Growth [1995-2005]" Theme="@Theme">
            <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
            <ChartPrimaryXAxis LabelFormat="yyyy" ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Minimum="0" Maximum="100000" Title="Profit" Interval="1" LabelFormat="${value}" MinorTicksPerInterval="5" EdgeLabelPlacement="EdgeLabelPlacement.Shift" ValueType="Syncfusion.Blazor.Charts.ValueType.Logarithmic">
                <ChartAxisMajorTickLines Width="0" Height="4"></ChartAxisMajorTickLines>
                <ChartAxisMajorGridLines Width="1.5"></ChartAxisMajorGridLines>
            </ChartPrimaryYAxis>
            <ChartTooltipSettings Enable="true" Header="Profit"></ChartTooltipSettings>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@ChartData" Name="Product X" XName="XValue" Width="2" Opacity="1" YName="YValue" Type="ChartSeriesType.Line">
                    <ChartMarker Visible="true" Height="10" Width="10">
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartLegendSettings Visible="false"></ChartLegendSettings>
        </SfChart>
</div>

@code{
    public class DateTimeData
    {
        public DateTime XValue { get; set; }
        public double YValue { get; set; }
    }
    public List<DateTimeData> ChartData = new List<DateTimeData>
        {
                new DateTimeData {XValue = new DateTime(1995, 1, 1), YValue = 80  },
                new DateTimeData {XValue = new DateTime(1996, 1, 1), YValue = 200  },
                new DateTimeData {XValue = new DateTime(1997, 1, 1), YValue = 400  },
                new DateTimeData {XValue = new DateTime(1998, 1, 1), YValue = 600  },
                new DateTimeData {XValue = new DateTime(1999, 1, 1), YValue = 700 },
                new DateTimeData {XValue = new DateTime(2000, 1, 1), YValue = 1400 },
                new DateTimeData {XValue = new DateTime(2001, 1, 1), YValue = 2000 } ,
                new DateTimeData {XValue = new DateTime(2002, 1, 1), YValue = 4000 },
                new DateTimeData {XValue = new DateTime(2003, 1, 1), YValue = 6000 },
                new DateTimeData {XValue = new DateTime(2004, 1, 1), YValue = 8000  },
                new DateTimeData {XValue = new DateTime(2005, 1, 1), YValue = 11000  },

        };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

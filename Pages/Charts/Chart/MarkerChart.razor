@page "/chart/marker-chart"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
   <p> This sample illustrates the rendering of symbols in chart. In line based series, data points can be annotated by using symbols.</p> 
</SampleDescription>
<ActionDescription>
   <p>Each points in a series can be represented as a symbol through marker. We can also customize the shape, size and color of a symbol through <code>Marker</code> properties.</p>
  <p> Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices. </p>
  <p>More information on the Marker can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="FB Penetration of Internet Audience" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Title="Countries" Interval="1" LabelIntersectAction="LabelIntersectAction.Rotate45" ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}%" Title="Penetration" Minimum="0" Maximum="75" Interval="15" RangePadding="ChartRangePadding.None">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" Name="December 2007" XName="XValue" Width="2"
                         Opacity="1" YName="YValue" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="10" Height="10" Shape="ChartShape.Diamond">
                    <ChartDataLabel Name="Text"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" Name="December 2008" XName="XValue" Width="2"
                         Opacity="1" YName="YValue1" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="10" Height="10" Shape="ChartShape.Pentagon">
                    <ChartDataLabel Name="Text"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" Name="December 2009" XName="XValue" Width="2"
                         Opacity="1" YName="YValue2" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="10" Height="10" Shape="ChartShape.Triangle">
                    <ChartDataLabel Name="Text"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    public class LineChartData
    {
        public string XValue { get; set; }
        public double YValue { get; set; }
        public double YValue1 { get; set; }
        public double YValue2 { get; set; }
        public string Text { get; set; }

    }

    public List<LineChartData>
    ChartData = new List<LineChartData>
        {
        new LineChartData { XValue = "WW", YValue = 12, YValue1 = 22, YValue2 = 38.3, Text = "World Wide"},
        new LineChartData { XValue = "EU", YValue = 9.9, YValue1 = 26, YValue2 = 45.2, Text = "Europe" },
        new LineChartData { XValue = "APAC", YValue = 6.4, YValue1 = 9.6, YValue2 = 18.2, Text = "Asia Pacific"},
        new LineChartData { XValue = "LATAM", YValue = 4.4, YValue1 = 28, YValue2 = 46.7, Text = "Latin America"},
        new LineChartData { XValue = "MEA", YValue = 30, YValue1 = 45.7, YValue2 = 61.5, Text = "Middle East Africa"},
        new LineChartData { XValue = "NA", YValue = 25.3, YValue1 = 35.9, YValue2 = 64, Text = "North America"},
        };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
    }

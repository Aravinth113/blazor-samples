@page "/chart/dashed-line"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample illustrates a line series with dash array. Dashed lines are animated by using css animation.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to render and configure the line type charts. Line type charts are used to represent time-dependent data, showing trends in data at equal intervals. You can use 
       <code>DashArray</code>, <code>Width</code>, <code>Fill</code> properties to customize the line. <code>Marker</code> and
       <code>DataLabel</code> are used to represent individual data and its value.
   </p>
   <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Fruits Production Statistics" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" LabelFormat="yyyy" IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}%" RangePadding="ChartRangePadding.None" Minimum="0" Maximum="40" Interval="10">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Shared="true"></ChartTooltipSettings>
        <ChartCrosshairSettings Enable="true" LineType="LineType.Vertical">
        </ChartCrosshairSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" Name="Banana" XName="xValue" Width="2"
                            Opacity="1" YName="yValue" Type="ChartSeriesType.Line" DashArray="5">
                <ChartMarker Visible="true" Width="10" Height="10">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" Name="Apple" XName="xValue" Width="2"
                            Opacity="1" YName="yValue1" Type="ChartSeriesType.Line" DashArray="10">
                <ChartMarker Visible="true" Width="10" Height="10" Shape="ChartShape.Diamond">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    public class LineChartData
    {
        public DateTime xValue { get; set; }
        public double yValue { get; set; }
        public double yValue1 { get; set; }
    }
    public List<LineChartData> ChartData = new List<LineChartData>
        {
        new LineChartData { xValue = new DateTime(2005, 01, 01), yValue = 12, yValue1 = 9.5 },
        new LineChartData { xValue = new DateTime(2006, 01, 01), yValue = 10.6, yValue1 = 19.9 },
        new LineChartData { xValue = new DateTime(2007, 01, 01), yValue = 15.6, yValue1 = 25.2 },
        new LineChartData { xValue = new DateTime(2008, 01, 01), yValue = 38.6, yValue1 = 36 },
        new LineChartData { xValue = new DateTime(2009, 01, 01), yValue = 27.4, yValue1 = 16.6 },
        new LineChartData { xValue = new DateTime(2010, 01, 01), yValue = 23.5, yValue1 = 14.2 },
        new LineChartData { xValue = new DateTime(2011, 01, 01), yValue = 16.6, yValue1 = 10.3 },
    };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}
<style>
    #control-container {
        padding: 0px !important;
    }

    #container_Series_1,
    #container_Series_0 {
        stroke-dasharray: 10px 10px;
        stroke-linejoin: round; stroke-linecap: round;
        -webkit-animation: dash 1s linear infinite;
        animation: dash 1s linear infinite;
    }

    #container_Series_0_Point_3_Symbol {
        -webkit-animation: opac 1s ease-out infinite;
        animation: opac 1s ease-out infinite;
    }

    @@-webkit-keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }

    @@keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }

    @@keyframes opac {
        0% {
            stroke-opacity: 1;
            stroke-width: 0px;
        }
        100% {
            stroke-opacity: 0;
            stroke-width: 10px;
        }
    }
</style>
@page "/chart/numeric-axis"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
    <p>  This sample demonstrates the rendering of numeric axis in the chart with England and West indies cricket match data.</p>
</SampleDescription>
<ActionDescription>
 <p>Numeric axis is used to plot numeric data in chart. To render numeric axis, set <code>ValueType</code> in axis to <code>Double</code>.</p>
 <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
 <p>More information on the Numeric Axis can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>  
</ActionDescription>

<div class="control-section">
    <SfChart Title="England vs West Indies" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Title="Death Overs" Minimum="15" Maximum="21" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis>
            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Format="${point.x}th Over : <b>${point.y} Runs</b>"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" XName="xValue" YName="yValue1" Opacity="1" Name="England" Fill="#1e90ff" Width="2" Type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" XName="xValue" YName="yValue2" Opacity="1" Name="West Indies" Fill="#b22222" Width="2" Type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Visible="true"></ChartLegendSettings>
    </SfChart>
</div>

@code{
    public class DoubleData
    {
        public double xValue { get; set; }
        public double yValue1 { get; set; }
        public double yValue2 { get; set; }
    }
    public List<DoubleData> ChartData = new List<DoubleData>
            {
                new DoubleData { xValue = 16, yValue1 = 2, yValue2= 7},
                new DoubleData { xValue = 17, yValue1 = 14, yValue2 = 7 },
                new DoubleData { xValue = 18, yValue1 = 7, yValue2 = 11 },
                new DoubleData { xValue = 19, yValue1 = 7, yValue2 = 8 },
                new DoubleData { xValue = 20, yValue1 = 10, yValue2 = 24 },
             };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

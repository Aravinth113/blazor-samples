@page "/chart/area-empty"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample illustrates an area series with empty points. Data points with null points are dropped here.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a area series with empty points. Similar to line type series, but the area get closed and filled with series color. You can use <code>Border</code>, <code>Fill</code> properties to customize the area. <code>Marker</code> and <code>DataLabel</code> are used to represent individual data and its value. Legend is enabled in this example with series type shape.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Inflation Rate" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="2" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Rates" LabelFormat="{value}M">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" Name="France" XName="x" Width="2"
                         Opacity="0.5" YName="y" Type="ChartSeriesType.Area">
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" Name="US" XName="x" Width="2"
                         Opacity="0.5" YName="y1" Type="ChartSeriesType.Area">
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    public class AreaEmptyChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
    }

    public List<AreaEmptyChartData> ChartData = new List<AreaEmptyChartData>
        {
                new AreaEmptyChartData { x= "2002", y= 2  , y1= 2.2 },
                new AreaEmptyChartData { x= "2003", y= 1.7, y1= 3.4 },
                new AreaEmptyChartData { x= "2004", y= 1.8, y1= 2.8 },
                new AreaEmptyChartData { x= "2005", y= 2.1 },
                new AreaEmptyChartData { x= "2006", y= 2.3 },
                new AreaEmptyChartData { x= "2007", y= 1.7, y1= 2.5 },
                new AreaEmptyChartData { x= "2008", y= 1.5, y1= 2.9 },
                new AreaEmptyChartData { x= "2009", y= 1.8, y1= 3.8 },
                new AreaEmptyChartData { x= "2010", y= 2  , y1= 1.4 },
                new AreaEmptyChartData { x= "2011", y= 3.1, y1= 3.1 }
            };
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }

}

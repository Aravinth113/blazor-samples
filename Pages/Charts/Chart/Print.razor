@page "/chart/print"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Buttons
@using PointRender
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
    <p>  This sample visualizes print feature in chart control.By clicking <code>Print</code>, you can print the chart directly from the browser.</p>
</SampleDescription>
<ActionDescription>
    <p>This sample demonstrates the print feature in chart.The rendered chart can be printed directly from the browser by calling the public method print. </p>
    <p>More information on the Print can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>
</ActionDescription>
<div class="row">
    <div class="control-section col-lg-9" align="center">
        <SfChart @ref="chartObj" Title="Sales Comparision" Theme="@Theme">
            <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
            <ChartPrimaryXAxis Title="Manager" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Minimum="0" Maximum="20000" Title="Sales">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@dataSource" XName="xValue" YName="yValue" Type="ChartSeriesType.Column">
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartEvents OnPointRender="PointRender"></ChartEvents>
        </SfChart>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tbody>
                <tr id="button-control" style="height: 50px">
                    <td align="center">
                        <SfButton ID="button" @onclick="PrintChart" Content="Print" CssClass="e-flat" IsPrimary="true"></SfButton>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
@code{
    SfChart chartObj;
    public class ExportData
    {
        public string xValue { get; set; }
        public double yValue { get; set; }
    }
    public List<ExportData> dataSource = new List<ExportData>
{
        new ExportData { xValue = "John", yValue = 10000 },
        new ExportData { xValue = "Jake", yValue = 12000 },
        new ExportData { xValue = "Peter", yValue = 18000 },
        new ExportData { xValue = "James", yValue = 11000 },
        new ExportData { xValue = "Mary", yValue = 9700 }
    };
    public void PrintChart(MouseEventArgs args)
    {
        chartObj.Print();
    }
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
    public void PointRender(PointRenderEventArgs args)
    {
        if (CurrentUri.IndexOf("material") > -1)
        {
            args.Fill = PointColor.MaterialColors[args.Point.Index % 10];
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            args.Fill = PointColor.FabricColors[args.Point.Index % 10];
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            args.Fill = PointColor.BootstrapColors[args.Point.Index % 10];
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            args.Fill = PointColor.HighContrastColors[args.Point.Index % 10];
        }

    }
}
<style>

    #button-control {
        width: 100%;
        text-align: center;
    }

    #control-container {
        padding: 0px !important;
    }

    .e-play-icon::before {
        content: '\e34b';
    }
</style>

@page "/chart/multiple-axis"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
    <p>       This sample illustrates multiple axis in chart to represent the temperature in Celsius in an axis and Fahrenheit in another axis.</p>
</SampleDescription>
<ActionDescription>
   <p> In this example, you can see how to render and configure multipe axes. Use axes collection to render secondary axis to the chart and bind it to the specify series. You can also customize the axis line and its labels similar to primary axis.</p>
   <p> Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
   <p>More information on the Multiple Axis can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Weather condition JPN vs DEU" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Country">
            <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" Maximum="100" Interval="20" LabelFormat="{value}°F">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartAxes>
            <ChartAxis Minimum="24" Maximum="36" Interval="2" OpposedPosition="true" RowIndex="0" Name="yAxis2" LabelFormat="{value}°C">
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            </ChartAxis>
        </ChartAxes>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" XName="x" YName="y" Opacity="1" Name="Germany" Width="2" Type="ChartSeriesType.Column">
                <ChartMarker Visible="true" Height="10" Width="10">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" YAxisName="yAxis2" XName="x" YName="y1" Opacity="1" Name="Japan" Width="2" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Height="10" Width="10">
                    <ChartMarkerBorder Color="#F8AB1D" Width="2"></ChartMarkerBorder>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartAnnotations>
            <ChartAnnotation X="SUN" Y="70" CoordinateUnits="Syncfusion.Blazor.Charts.Units.Point">
                <ContentTemplate>
                    <div><img src="images/chart/cloud.png" style="width: 41px; height: 41px" /></div>
                </ContentTemplate>
            </ChartAnnotation>
            <ChartAnnotation YAxisName="yAxis2" X="SAT" Y="35" CoordinateUnits="Syncfusion.Blazor.Charts.Units.Point">
                <ContentTemplate>
                    <div><img src="images/chart/sunny.png" style="width: 41px; height: 41px" /></div>
                </ContentTemplate>
            </ChartAnnotation>
        </ChartAnnotations>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
    </SfChart>
</div>

@code{
    public string SUN = "SUN", SAT = "SAT";
    public class CategoryData
    {
        public string x{ get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
    }
    public List<CategoryData> ChartData = new List<CategoryData>
            {
                new CategoryData { x = "SUN", y = 35, y1 = 31 },
                new CategoryData { x = "MON", y = 40, y1 = 28 },
                new CategoryData { x = "TUE", y = 50, y1 = 29 },
                new CategoryData { x = "WED", y = 70, y1 = 30 },
                new CategoryData { x = "THU", y = 65, y1 = 33 },
                new CategoryData { x = "FRI", y = 55, y1 = 32},
                new CategoryData { x = "SAT", y = 50, y1 = 34 },
             };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

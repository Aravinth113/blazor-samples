@page "/chart/polar-range-column"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
   <p>   This sample demonstrates polar series with range column type for temperature variation.The switching between polar and radar series can be done by using <code>Series Type</code> in property panel.</p> 
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to render and configure the range column type chart You can use <code>Border</code>, <code>Fill</code> properties to customize the area. <code>DataLabel</code> are used to represent individual data and its value. </p>
   <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
   <p>More information on the polar series can be found in this <a target='_blank' href='https://ej2.syncfusion.com/documentation/api/chart/series/#type'>documentation section</a>.</p>
</ActionDescription>

<div class="row">
<div class="col-lg-9 control-section">
    <SfChart Title="Maximum and Minimum Temperature" Theme="@Theme">
        <ChartPrimaryXAxis Interval="1" Coefficient="100" LabelPlacement="LabelPlacement.OnTicks" StartAngle=90 ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" Maximum="15" Interval="5" LabelFormat="{value}"></ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true">
        </ChartTooltipSettings>
        <ChartLegendSettings Visible="false">
        </ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@DataSource" Name="Germany" XName="x" Width="2" Low="low" High="high" Type="@SeriesType" DrawType="ChartDrawType.RangeColumn">
                <ChartSeriesBorder Color="white" Width="3"></ChartSeriesBorder>
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top" EnableRotation="true">
                        <ChartDataLabelFont Color="#ffffff"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>
    <div class="col-lg-3 property-section">
        <table style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <SfDropDownList TValue="string" TItem="SeriesTypes" @bind-Value="@DropVal" DataSource="@Country">
                        <DropDownListEvents TValue="string" TItem="SeriesTypes" ValueChange="ChangeSeriesType"></DropDownListEvents>
                        <DropDownListFieldSettings Value="Type"></DropDownListFieldSettings>
                    </SfDropDownList>
                </td>
            </tr>
        </table>
    </div>
</div>
@code{
    public string DropVal = "Polar";

    public class SeriesTypes
    {
        public string Type { get; set; }

        public string Code { get; set; }
    }

    List<SeriesTypes> Country = new List<SeriesTypes>
{
        new SeriesTypes() { Type = "Polar", Code = "P" },
        new SeriesTypes() { Type = "Radar", Code = "R" },
    };

    ChartSeriesType SeriesType = ChartSeriesType.Polar;
    public void ChangeSeriesType(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, SeriesTypes> args)
    {
        this.SeriesType = (ChartSeriesType)Enum.Parse(typeof(ChartSeriesType), args.Value.ToString(), true);
        StateHasChanged();
    }
    public class PolarRangeColumnData
    {
        public string x { get; set; }
        public double low { get; set; }
        public double high { get; set; }
    }
    public List<PolarRangeColumnData> DataSource = new List<PolarRangeColumnData>
           {
                new PolarRangeColumnData { x= "Jan", low= 2, high= 7 },
                new PolarRangeColumnData { x= "Feb", low= 3, high= 7 },
                new PolarRangeColumnData { x= "Mar", low= 3, high= 7 },
                new PolarRangeColumnData { x= "Apr", low= 4, high= 9 },
                new PolarRangeColumnData { x= "May", low= 6, high= 11 },
                new PolarRangeColumnData { x= "June", low= 8, high= 14 }
            };

    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}
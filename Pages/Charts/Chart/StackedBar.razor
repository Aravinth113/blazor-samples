@page "/chart/stacked-bar"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample visualizes sales comparison of different fruits with default stacked bar series in chart. Legend in the sample shows the information about the series.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to render and configure the stacking bar type charts. Stacks the points in the series horizontally and also you can use <code>StackingGroup</code> property to group the stacking collection based on categories.You can use <code>Border</code>, <code>Fill</code> properties to customize the Horizontal bar.</p>
   <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Sales Comparison" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis  LabelFormat="{value}%" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y" Width="2" Name="Apple" Type="ChartSeriesType.StackingBar">
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y1" Width="2" Name="Orange" Type="ChartSeriesType.StackingBar">
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" XName="x" YName="y2" Width="2" Name="Wastage" Type="ChartSeriesType.StackingBar">
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </SfChart>
</div>

@code{
    public class StackedBarChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
    }
    public List<StackedBarChartData> DataSource = new List<StackedBarChartData>
    {
        new StackedBarChartData { x= "Jan", y= 6   , y1= 6 , y2= -1  },
        new StackedBarChartData { x= "Feb", y= 8   , y1= 8 , y2= -1.5},
        new StackedBarChartData { x= "Mar", y= 12  , y1= 11, y2= -2  },
        new StackedBarChartData { x= "Apr", y= 15.5, y1= 16, y2= -2.5},
        new StackedBarChartData { x= "May", y= 20  , y1= 21, y2= -3  },
        new StackedBarChartData { x= "Jun", y= 24  , y1= 25, y2= -3.5}
    };
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

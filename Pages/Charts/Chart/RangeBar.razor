@page "/chart/range-bar"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
    <p>This sample illustrates a range column series by inversing its X and Y  Axes. Tooltip shows the information about the data points.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to render and configure the range column type chart with inverted manner. You can use <code>Border</code>,<code>Fill</code> properties to customize the columns and its value.</p>
    <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Temperature Variation" IsTransposed="true" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis EdgeLabelPlacement="EdgeLabelPlacement.Shift" LabelFormat="{value}˚F">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartData" XName="x" High="High" Low="Low" Name="California" Type="ChartSeriesType.RangeColumn">
            </ChartSeries>
            <ChartSeries DataSource="@ChartData" XName="x" High="High1" Low="Low1" Name="Colorado" Type="ChartSeriesType.RangeColumn">
            </ChartSeries>          
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </SfChart>
</div>

@code{

    public class RangeBarChartData
    {
        public string x { get; set; }
        public double Low { get; set; }
        public double High { get; set; }
        public double Low1 { get; set; }
        public double High1 { get; set; }
    }

    public List<RangeBarChartData> ChartData = new List<RangeBarChartData>
            {
                new RangeBarChartData { x= "Jul", Low= 28, High= 72, Low1= 38, High1= 78 },
                new RangeBarChartData { x= "Aug", Low= 18, High= 65, Low1= 27, High1= 78 },
                new RangeBarChartData { x= "Sep", Low= 56, High= 87, Low1= 28, High1= 79 },
                new RangeBarChartData { x= "Oct", Low= 40, High= 78, Low1= 37, High1= 66 },
                new RangeBarChartData { x= "Nov", Low= 43, High= 64, Low1= 25, High1= 52 },
                new RangeBarChartData { x= "Dec", Low= 28, High= 54, Low1= 20, High1= 60 }
            };
    string CurrentUri;
    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.HighContrast;
        }
        else
        {
            Theme = Syncfusion.Blazor.Theme.Bootstrap4;
        }
    }
}

@page "/chart/histogram"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts/chart-types/histogram-chart'>Blazor Histogram Chart</a> example visualizes the student's results of the final examination with histogram series in the chart. Number of students between each interval is shown by using the data label.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to render and configure the histogram type chart. The histogram type chart is a bar (column) chart used for frequency distribution in which the widths of the bars are proportional to classes into which variables have been divided and the heights of the bars are proportional to class frequencies.
        <code>DataLabel</code> property is used to represent individual data and its value.
    </p>
    <p><code>Tooltip</code> is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
    <p>More information about the histogram series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/chart-types/histogram'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Examination Result" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Minimum="0" Maximum="100" Title="Score of Final Examination">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" Maximum="6" Interval="2" Title="Number of Students">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" YName="Score" Type="ChartSeriesType.Histogram" BinInterval="20" ShowNormalDistribution="true" ColumnWidth="0.99">
                <ChartMarker Visible="true" Height="10" Width="10">
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont Color="#ffffff" FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </SfChart>
</div>

@code{

    private Theme Theme { get; set; }
    public List<HistogramData> ChartPoints { get; set; } = new List<HistogramData>
    {
       new HistogramData { Score = 5.250 },
       new HistogramData { Score = 7.750 },
       new HistogramData { Score = 8.275 },
       new HistogramData { Score = 9.750 },
       new HistogramData { Score = 36.250 },
       new HistogramData { Score = 46.250 },
       new HistogramData { Score = 56.250 },
       new HistogramData { Score = 66.500 },
       new HistogramData { Score = 76.625 },
       new HistogramData { Score = 80.000 },
       new HistogramData { Score = 97.750 }
    };

    protected override void OnInitialized()
    {
        if (NavigationManager.Uri.IndexOf("material") > -1)
        {
            Theme = Theme.Material;
        }
        else if (NavigationManager.Uri.IndexOf("fabric") > -1)
        {
            Theme = Syncfusion.Blazor.Theme.Fabric;
        }
        else if (NavigationManager.Uri.IndexOf("bootstrap") > -1)
        {
            Theme = Theme.Bootstrap;
        }
        else if (NavigationManager.Uri.IndexOf("highcontrast") > -1)
        {
            Theme = Theme.HighContrast;
        }
        else
        {
            Theme = Theme.Bootstrap4;
        }
    }

    public class HistogramData
    {
        public double Score { get; set; }
    }

}

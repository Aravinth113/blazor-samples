@page "/tree-grid/keyboard-interaction"

@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Grids

@*Hidden:Lines*@
@using blazor_samples
@using ej2_blazor_selfdata
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p> This demo showcases the keyboard shortcuts applicable on Tree Grid and also lists out in below description, how those applicable shortcuts interacts with Tree Grid actions.</p>
</SampleDescription>
<ActionDescription>
  <p> All the Tree Grid actions can be controlled via keyboard keys.</p>
  <p> For more information check in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/treegrid/accessibility/?no-cache=1' >documentation </a> section.</p> 
</ActionDescription>


<div class="col-lg-8 control-section">
    <div class="content-wrapper">
        <div class="row">
              <SfTreeGrid DataSource="@TreeData" IdMapping="TaskID" ParentIdMapping="ParentID" AllowPaging="true" Height="400" TreeColumnIndex="1" AllowSelection="true">
                <TreeGridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple" Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></TreeGridSelectionSettings>
                <TreeGridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="Syncfusion.Blazor.TreeGrid.EditMode.Row"></TreeGridEditSettings>
                <TreeGridPageSettings PageSize="2"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="80" ValidationRules="@(new ValidationRules() { Required = true, Number = true })" IsPrimaryKey="true" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" ValidationRules="@(new ValidationRules() { Required = true })" Width="165"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="d" Type=Syncfusion.Blazor.Grids.ColumnType.Date Width="100" ValidationRules="@(new ValidationRules() { Required = true })" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Edit="@( new { @params= new { format ="M/d/y hh:mm a" } })" EditType=Syncfusion.Blazor.Grids.EditType.DatePickerEdit></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" ValidationRules="@(new ValidationRules() { Number = true, Min = 0 })" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                </TreeGridColumns>
            </SfTreeGrid>
        </div>
    </div>
</div>
<div class="col-lg-3 property-section">
    <div class="property-panel-header">Properties</div>
    <table id="property" title="Properties" style="width: 156%; height: 100%;">
        <tr style="height: 50px">
            <td style="width: 30%">
                <b>Keys</b>
            </td>
            <td style="width: 70%;padding-right: 10px">
                <b>Description</b>
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>F2</b>
            </td>
            <td style="width: 50%">
                Cell edit
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Enter</b>
            </td>
            <td style="width: 50%">
                Save request
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Delete</b>
            </td>
            <td style="width: 50%">
                Delete row
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Ctrl + Shift + UpArrow</b>
            </td>
            <td style="width: 50%">
                Collapse Child Grid
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Ctrl + Shift + DownArrow</b>
            </td>
            <td style="width: 50%">
                Expand Child Grid
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Ctrl + UpArrow</b>
            </td>
            <td style="width: 50%">
                Collapse All
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Ctrl + DownArrow</b>
            </td>
            <td style="width: 50%">
                Expand All
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Up Arrow</b>
            </td>
            <td style="width: 50%">
                Move row selection up
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Down Arrow</b>
            </td>
            <td style="width: 50%">
                Move row selection down
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Right Arrow</b>
            </td>
            <td style="width: 50%">
                Move Cell selection right
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Left Arrow</b>
            </td>
            <td style="width: 50%">
                Move Cell selection left
            </td>
        </tr>
        <tr style="height:50px;">
            <td style="width: 50%">
                <b>Shift + Down/Up</b>
            </td>
            <td style="width: 50%">
                Multiple row Selection
            </td>
        </tr>
    </table>
</div>

@code {
    public List<SelfReferenceData> TreeData { get; set; }

    protected override void OnInitialized()
    {
        this.TreeData = SelfReferenceData.GetTree().ToList();
    }
}
